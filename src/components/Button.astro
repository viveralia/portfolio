---
interface Props {
  target?: string
  href: string
}

const { target, href } = Astro.props
---

<a target={target} href={href} class='button'>
  <slot />
</a>

<style lang="scss">
  .button {
    display: inline-block;
    border: none;
    padding: 0.375rem 1.25rem;
    background-color: var(--loud-color);
    color: var(--background-color);
    border-radius: 0.375rem;
    font-family: var(--base-font-family);
    font-style: normal;
    font-weight: 600;
    font-size: 0.75rem;
    letter-spacing: 0.05em;
    user-select: none;
    text-decoration: none;
    transition: all 0.75s ease;
    position: relative;
    &:before {
      content: '';
      background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);
      position: absolute;
      top: -2px;
      left:-2px;
      background-size: 400%;
      z-index: -1;
      filter: blur(5px);
      width: calc(100% + 4px);
      height: calc(100% + 4px);
      animation: glowing 20s linear infinite;
      opacity: 0;
      transition: opacity .3s ease-in-out;
      border-radius: 10px;
    }
    &:after {
      z-index: -1;
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      background: #111;
      left: 0;
      top: 0;
      border-radius: 10px;
    }
    &:active {
      color: #000;
      &:after {
        background: transparent;
      }
    }
    &:hover {
      &:before {
        opacity: 1;
      }
    }
  }
  @keyframes glowing {
    0% { background-position: 0 0; }
    50% { background-position: 400% 0; }
    100% { background-position: 0 0; }
  }
</style>
